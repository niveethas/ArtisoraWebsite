@page "/showcase"
@using ArtisoraServer
@inject NotificationService notif
@inject NavigationManager nav

<RadzenDialog />
<RadzenNotification />
<PageTitle>View Showcases</PageTitle>

<div class="rz-m-10">
    @if (showcases != null)
    {
        <RadzenRow class="rz-text-align-center" Gap="2rem" RowGap="2rem">
            @foreach (var s in showcases)
            {
                <RadzenText TextStyle="TextStyle.Overline" TextAlign="TextAlign.Center">Showcase No.: @s.ShowcaseId</RadzenText>
                <RadzenText TextStyle="TextStyle.H5" TextAlign="TextAlign.Center">@s.SelfDescription</RadzenText>
                <RadzenColumn Size="5" class=" rz-color-secondary-lighter rz-p-5">
                    <RadzenStack Orientation="Orientation.Vertical" class="rz-py-5">
                        <RadzenImage Style="width:300px;" Path="@s.Image1"></RadzenImage>
                        <RadzenText TextStyle="TextStyle.Caption">@s.Image1Caption</RadzenText>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn  class=" rz-color-secondary-lighter rz-p-5">
                    <RadzenStack Orientation="Orientation.Vertical" class="rz-py-5">
                        <RadzenImage Style="width:300px;" Path="@s.Image2"></RadzenImage>
                        <RadzenText TextStyle="TextStyle.Caption">@s.Image2Caption</RadzenText>
                    </RadzenStack>
                </RadzenColumn>
                <RadzenColumn  class=" rz-color-secondary-lighter rz-p-5">
                    <RadzenStack Orientation="Orientation.Vertical" class="rz-py-5">
                        <RadzenImage Style="width:300px;" Path="@s.Image3"></RadzenImage>
                        <RadzenText TextStyle="TextStyle.Caption">@s.Image3Caption</RadzenText>
                    </RadzenStack>
                </RadzenColumn>
            }
        </RadzenRow>
    }else{
        <RadzenText TextAlign="TextAlign.Left" TextStyle="TextStyle.Subtitle1">You have not added any showcases yet! Please add a showcase below to be displayed publically!</RadzenText>
    }
    <RadzenCard Class="rz-shadow-0 rz-border-radius-0 rz-p-12">
        <RadzenTemplateForm TItem="ShowcaseDTO" Data="newShowcase">
        <RadzenStack Orientation="Orientation.Vertical">
            <RadzenLabel Text="Third Image and Caption" />
            <RadzenTextBox Name="description" @bind-Value =@newShowcase.SelfDescription></RadzenTextBox>
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Vertical">
            <RadzenLabel Text="First Image and Caption" />
            <RadzenUpload Auto="true" Error=@(args => uploadError(args)) Multiple="false" class="w-100" Url="https://localhost:7123/showcase/upload" Complete=@(args => uploadComplete1(args)) />
            <RadzenTextBox Name = "image1Cap" @bind-Value=@newShowcase.Image1Caption></RadzenTextBox>
        </RadzenStack>
            <RadzenStack Orientation="Orientation.Vertical">
                <RadzenLabel Text="Second Image and Caption" />
                <RadzenUpload Auto="true" Error=@(args => uploadError(args)) Multiple="false" class="w-100" Url="https://localhost:7123/showcase/upload" Complete=@(args => uploadComplete2(args)) />
                <RadzenTextBox Name="image2Cap" @bind-Value=@newShowcase.Image2Caption></RadzenTextBox>
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Vertical">
                <RadzenLabel Text="Third Image and Caption" />
                <RadzenUpload Auto="true" Error=@(args => uploadError(args)) Multiple="false" class="w-100" Url="https://localhost:7123/showcase/upload" Complete=@(args => uploadComplete3(args)) />
                <RadzenTextBox Name="image3Cap" @bind-Value=@newShowcase.Image3Caption></RadzenTextBox>
            </RadzenStack>
            <RadzenButton ButtonType="ButtonType.Submit" Text="Submit" Click="@(()=>createShowcase(newShowcase))"></RadzenButton>

        </RadzenTemplateForm>
    </RadzenCard>
</div>

@code {
    [Inject]
    public ClientAPI? _api { get; set; }

    public ICollection<Showcase> showcases = new List<Showcase>();
    private int? currentUserID = CurrentUser._userid;
    ShowcaseDTO newShowcase = new ShowcaseDTO();
    public string filePath1, filePath2, filePath3;

    protected override async Task OnInitializedAsync()
    {
        showcases = await _api.ShowcasesAsync(currentUserID);
    }

    void uploadError(UploadErrorEventArgs args)
    {
        var notifMsg = new NotificationMessage { Severity = NotificationSeverity.Warning, Summary = "Error", Detail = "File submission failed.", Duration = 4000 };
        notif.Notify(notifMsg);
    }

    async void uploadComplete1(UploadCompleteEventArgs args)
    {
        
            filePath1 = @"\ShowcaseImages\" + args.RawResponse;
        
    }

    async void uploadComplete2(UploadCompleteEventArgs args)
    {
        filePath2 = @"\ShowcaseImages\" + args.RawResponse;
    }
    async void uploadComplete3(UploadCompleteEventArgs args)

    {
        filePath3 = @"\ShowcaseImages\" + args.RawResponse;
    }


    public async Task createShowcase(ShowcaseDTO newSC){

        try
        {
            var tempSC = new ShowcaseDTO
                {
                    Image1 = filePath1,
                    Image1Caption = newSC.Image1Caption,
                    Image2 = filePath2,
                    Image2Caption = newSC.Image2Caption,
                    Image3 = filePath3,
                    Image3Caption = newSC.Image3Caption,
                    SelfDescription = newSC.SelfDescription,
                    MentorId = (int)currentUserID
                };
            await _api.New6Async(tempSC);
            var notifMsg = new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Uploaded!", Detail = "Your upload has been successfully saved!", Duration = 4000 };
            notif.Notify(notifMsg);
            nav.NavigateTo("/");
        }
        catch (Exception e)
        {
            var notifMsg = new NotificationMessage { Severity = NotificationSeverity.Error, Summary = "Error", Detail = "File upload failed to save. Please try again.", Duration = 4000 };
            notif.Notify(notifMsg);
        }
    }
}
